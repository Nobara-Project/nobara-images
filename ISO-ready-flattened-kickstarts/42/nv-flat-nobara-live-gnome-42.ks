# Generated by pykickstart v3.52
#version=DEVEL
# Firewall configuration
firewall --enabled --service=mdns
# Keyboard layouts
keyboard 'us'
# System language
lang en_US.UTF-8
# Network information
network  --bootproto=dhcp --device=link --activate
# Shutdown after installation
shutdown
repo --name="nobara" --baseurl=https://usw.nobaraproject.org/rolling/fedora --cost=99
repo --name="nobara-updates" --baseurl=https://usw.nobaraproject.org/rolling/nobara-updates --cost=98
repo --name="nvidia-prod" --baseurl=https://usw.nobaraproject.org/rolling/nvidia/prod --cost=98
repo --name="nobara-appstream" --baseurl=https://usw.nobaraproject.org/rolling/appstream --exclude=nobara-resolve-runtime
repo --name="brave" --baseurl=https://brave-browser-rpm-release.s3.brave.com/$basearch
# Root password
rootpw --iscrypted --lock locked
# SELinux configuration
selinux --disabled
# System services
services --disabled="sshd,custom-device-pollrates" --enabled="NetworkManager,ModemManager,inputplumber,falcond"
# System timezone
timezone US/Eastern
# Use network installation
url --url="https://usw.nobaraproject.org/rolling/fedora"
# X Window System configuration information
xconfig  --startxonboot
# System bootloader configuration
bootloader --location=none
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all
# Disk partitioning information
part / --fstype="ext4" --size=25600

#workaround for successful nvidia graphics driver installation
%pre-install
mkdir -p /mnt/sysimage/etc/default
touch /mnt/sysimage/etc/default/grub
%end

%post
# Enable livesys services
systemctl enable livesys.service
systemctl enable livesys-late.service
systemctl enable akmods

# add static hostname
hostnamectl set-hostname "nobara-live"

# enable tmpfs for /tmp
systemctl enable tmp.mount

# make it so that we don't do writing to the overlay for things which
# are just tmpdirs/caches
# note https://bugzilla.redhat.com/show_bug.cgi?id=1135475
cat >> /etc/fstab << EOF
vartmp   /var/tmp    tmpfs   defaults   0  0
EOF

# work around for poor key import UI in PackageKit
rm -f /var/lib/rpm/__db*
echo "Packages within this LiveCD"
rpm -qa --qf '%{size}\t%{name}-%{version}-%{release}.%{arch}\n' |sort -rn
# Note that running rpm recreates the rpm db files which aren't needed or wanted
rm -f /var/lib/rpm/__db*

# go ahead and pre-make the man -k cache (#455968)
/usr/bin/mandb

# make sure there aren't core files lying around
rm -f /core*

# remove random seed, the newly installed instance should make it's own
rm -f /var/lib/systemd/random-seed

# convince readahead not to collect
# FIXME: for systemd

echo 'File created by kickstart. See systemd-update-done.service(8).' \
    | tee /etc/.updated >/var/.updated

# Drop the rescue kernel and initramfs, we don't need them on the live media itself.
# See bug 1317709
rm -f /boot/*-rescue*

# Disable network service here, as doing it in the services line
# fails due to RHBZ #1369794
systemctl disable network

# Remove machine-id on pre generated images
rm -f /etc/machine-id
touch /etc/machine-id

# set default GTK+ theme for root (see #683855, #689070, #808062)
cat > /root/.gtkrc-2.0 << EOF
include "/usr/share/themes/Adwaita-dark/gtk-2.0/gtkrc"
include "/etc/gtk-2.0/gtkrc"
gtk-theme-name="Adwaita-dark"
EOF
mkdir -p /root/.config/gtk-3.0
cat > /root/.config/gtk-3.0/settings.ini << EOF
[Settings]
gtk-theme-name = Adwaita-dark
EOF

# set livesys session type
sed -i 's/^livesys_session=.*/livesys_session="kde"/' /etc/sysconfig/livesys

# Make the calamares run on login
mkdir -p /home/liveuser/.config/autostart
cp -a /usr/share/applications/calamares.desktop /home/liveuser/.config/autostart/

# Add calamares installer desktop shortcut
mkdir /home/liveuser/Desktop
cp -a /usr/share/applications/calamares.desktop /home/liveuser/Desktop/
chmod a+x /home/liveuser/Desktop/*

# Create /usr/bin/liveuser_clean script
cat << 'EOF' > /home/liveuser/liveuser_clean
#!/bin/bash

rm /home/liveuser/Desktop/steam.desktop
rm /home/liveuser/Desktop/Return.desktop
rm /home/liveuser/Desktop/RemoteHost.desktop
rm /home/liveuser/.config/autostart/steam.desktop
EOF

# Make the script executable
chmod +x /home/liveuser/liveuser_clean

mkdir /home/liveuser/.config/autostart/
# Create /etc/xdg/autostart/liveuser_clean.desktop
cat << 'EOF' > /home/liveuser/.config/autostart/liveuser_clean.desktop
[Desktop Entry]
Type=Application
Exec=/home/liveuser/liveuser_clean
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
Name[en_US]=Liveuser Clean
Name=Liveuser Clean
Comment[en_US]=Clean up desktop files for liveuser
Comment=Clean up desktop files for liveuser
EOF

# make sure to set the right permissions and selinux contexts
chown -R liveuser:liveuser /home/liveuser/
restorecon -R /home/liveuser/

# gnome specific

# set up auto-login
cat << EOF >> /etc/gdm/custom.conf
[daemon]
AutomaticLoginEnable=True
AutomaticLogin=liveuser
DefaultSession=gnome-wayland.desktop
EOF

# don't autostart gnome-software session service
rm -f /etc/xdg/autostart/gnome-software-service.desktop

# nvidia modules, update grub, set sddm theme for nobara official
cat << EOF >> /usr/share/calamares/modules/shellprocess.conf
    - command: "akmods"
      timeout: 3600
    - command: "dracut -f --regenerate-all"
      timeout: 3600
EOF

# don't run gnome-initial-setup
mkdir /home/liveuser/.config
touch /home/liveuser/.config/gnome-initial-setup-done

# Turn off PackageKit-command-not-found while uninstalled
if [ -f /etc/PackageKit/CommandNotFound.conf ]; then
  sed -i -e 's/^SoftwareSourceSearch=true/SoftwareSourceSearch=false/' /etc/PackageKit/CommandNotFound.conf
fi

# disable the gnome-software shell search provider
cat << EOF >>  /usr/share/gnome-shell/search-providers/org.gnome.Software-search-provider.ini
DefaultDisabled=true
EOF

# disable gnome-software automatically downloading updates
cat << EOF >> /usr/share/glib-2.0/schemas/org.gnome.software.gschema.override
[org.gnome.software]
download-updates=false
EOF

cat << EOF >> /usr/share/glib-2.0/schemas/org.gnome.shell.gschema.override
[org.gnome.shell]
favorite-apps=['org.gnome.Settings.desktop', 'com.flatpost.flatpostapp.desktop', 'org.gnome.Nautilus.desktop', 'brave-browser.desktop', 'calamares.desktop']
EOF

# rebuild schema cache with any overrides we installed
glib-compile-schemas /usr/share/glib-2.0/schemas

# nvidia
akmods
dracut -f

# empty tmp files so unmount doesn't fail when unmounting /tmp due to kernel modules being installed
rm -Rf /tmp/*

%end


%packages
@anaconda-tools
@fonts
@guest-desktop-agents
@hardware-support
@multimedia
@printing
@standard
@^workstation-product-environment
aajohan-comfortaa-fonts
adw-gtk3
alsa-firmware
apparmor-parser
apparmor-utils
apr
apr-util
brave
bsdtar
calamares
chkconfig
dnfdaemon
dracut-live
ds-inhibit
evince
falcond
fedora-repos
fedora-workstation-repositories
ffmpegthumbs
file-roller
flac-libs.i686
flac-libs.x86_64
flatpak
flatpost
foomatic
fuse
gamemode.i686
gamemode.x86_64
gamescope
gcc-gfortran
gedit
ghc-mountpoints
glibc-all-langpacks
gnome-backgrounds
gnome-icon-theme
gnome-shell-extension-gamemode
gnome-startup-applications
gnome-tweaks
goverlay
grubby
gsettings-desktop-schemas
gstreamer1.i686
gstreamer1-plugins-bad-free-extras.i686
gstreamer1-plugins-bad-free-extras.x86_64
gstreamer1-plugins-bad-free.i686
gstreamer1-plugins-bad-free.x86_64
gstreamer1-plugins-base.i686
gstreamer1-plugins-base.x86_64
gstreamer1-plugins-good.i686
gstreamer1-plugins-good.x86_64
gstreamer1-plugins-ugly-free.i686
gstreamer1-plugins-ugly-free.x86_64
gstreamer1.x86_64
hplip
i2c-tools
initscripts
inkscape
inputplumber
isomd5sum
json-c.i686
json-c.x86_64
kernel
kernel-modules
libaom.i686
libaom.x86_64
libasyncns.i686
libasyncns.x86_64
libavcodec-free
libavdevice-free
libavfilter-free
libavformat-free
libavutil-free
liberation-narrow-fonts.noarch
libexif.i686
libexif.x86_64
libgcc.i686
libgcc.x86_64
libi2c
libICE.i686
libICE.x86_64
libieee1284.i686
libieee1284.x86_64
libogg.i686
libogg.x86_64
libportal
libportal-gtk4
libpostproc-free
libreoffice
libSM.i686
libSM.x86_64
libsndfile.i686
libsndfile.x86_64
libswresample-free
libswscale-free
libunity
libuuid.i686
libuuid.x86_64
libva.i686
libva.x86_64
libvorbis.i686
libvorbis.x86_64
libwayland-client.i686
libwayland-client.x86_64
libwayland-server.i686
libwayland-server.x86_64
libXtst.i686
libXtst.x86_64
livesys-scripts
llvm-libs.i686
llvm-libs.x86_64
lutris
mangohud.i686
mangohud.x86_64
mariadb-connector-c
mariadb-embedded
mariadb-server
mediawriter
memtest86+
mesa-libGLU.i686
mesa-libGLU.x86_64
mesa-libOpenCL
mesa-va-drivers
mesa-va-drivers.i686
mesa-vdpau-drivers
mesa-vdpau-drivers.i686
mscore-fonts
nautilus-admin
neofetch
nobara-browser-policy
nobara-controller-config
nobara-login
nobara-login-sysctl
nobara-repos
nobara-updater
nobara-welcome
noopenh264
nss-mdns.i686
nss-mdns.x86_64
numactl
akmod-nvidia
nvidia-driver
libnvidia-ml
libnvidia-ml.i686
libnvidia-fbc
nvidia-driver-cuda
nvidia-driver-cuda-libs
nvidia-driver-cuda-libs.i686
nvidia-driver-libs
nvidia-driver-libs.i686
nvidia-kmod-common
nvidia-libXNVCtrl
nvidia-modprobe
nvidia-persistenced
nvidia-settings
nvidia-vaapi-driver
nvidia-gpu-firmware
ocl-icd.i686
ocl-icd.x86_64
opengamepadui
openrgb
openssl
openssl-libs.i686
openssl-libs.x86_64
papirus-folders
papirus-icon-theme
papirus-icon-theme-dark
pavucontrol
pipewire-jack-audio-connection-kit-libs
plymouth-plugin-script
power-profiles-daemon
protonplus-next
pulseaudio-libs.i686
pulseaudio-libs.x86_64
python3-hid
python3-vapoursynth
qemu-device-display-qxl
qt5ct
rpmfusion-free-release
ryzenadj
samba-common-tools.x86_64
samba-libs.x86_64
samba-winbind-clients.x86_64
samba-winbind-modules.x86_64
samba-winbind.x86_64
sane-backends-libs.i686
sane-backends-libs.x86_64
sdgyrodsu
steam
syslinux
system-config-language
tcp_wrappers-libs.i686
tcp_wrappers-libs.x86_64
timeshift
umu-launcher
unixODBC.i686
unixODBC.x86_64
vapoursynth-tools
vim
vkBasalt.i686
vkBasalt.x86_64
vulkan-tools
winehq-staging
winetricks
yumex
zenity
-abrt*
-abrt-cli
-abrt-desktop
-abrt-java-connector
-appmenu-qt5
-appmenu-qt5-profile.d
-compat-ffmpeg4
-device-mapper-multipath
-@dial-up
-dnfdragora
-fcoe-utils
-fedora-repos-modular
-gfs2-utils
-gnome-abrt
-gnome-boxes
-gnome-shell-extension-background-logo
-gnome-software
-gnome-text-editor
-gnome-tour
-gstreamer1-libav
-gstreamer1-plugins-bad-freeworld
-gstreamer1-plugins-ugly
-@input-methods
-intel-media-driver
-kernel-uki-virt
-libavdevice
-libfreeaptx
-libva-intel-driver
-musescore
-nfs-utils
-pipewire-codec-aptx
-qgnomeplatform-qt5
-qgnomeplatform-qt6
-qt5-qtwebengine-freeworld
-reiserfs-utils
-sushi
-unoconv
%end
